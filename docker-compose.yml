version: "3.9"

services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "8081:8080" # Traefik dashboard
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - net

  db:
    image: postgres:16-alpine
    container_name: shortener-db
    environment:
      POSTGRES_DB: shortener
      POSTGRES_USER: shortener
      POSTGRES_PASSWORD: shortener
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U shortener -d shortener"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - net

  app:
    build: .
    container_name: shortener-app
    depends_on:
      db:
        condition: service_healthy
      traefik:
        condition: service_started
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/shortener
      SPRING_DATASOURCE_USERNAME: shortener
      SPRING_DATASOURCE_PASSWORD: shortener
      JAVA_OPTS: "-Xms256m -Xmx512m"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.shortener.rule=Host(`short.local`)"
      - "traefik.http.routers.shortener.entrypoints=web"
      - "traefik.http.services.shortener.loadbalancer.server.port=8080"
    networks:
      - net

networks:
  net:
    driver: bridge

volumes:
  db-data: